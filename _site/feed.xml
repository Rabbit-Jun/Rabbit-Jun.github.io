<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-11-19T18:50:04+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">RabbitJun’s Blog</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">multy</title><link href="http://localhost:4000/computer_structure/2024/11/19/multy.html" rel="alternate" type="text/html" title="multy" /><published>2024-11-19T00:00:00+09:00</published><updated>2024-11-19T00:00:00+09:00</updated><id>http://localhost:4000/computer_structure/2024/11/19/multy</id><content type="html" xml:base="http://localhost:4000/computer_structure/2024/11/19/multy.html"><![CDATA[<h1 id="2진-부동소수점-곱셈-과정">2진 부동소수점 곱셈 과정</h1>
<ol>
  <li>가수들을 곱한다(<em>부호를 고려해야 함, 곱셈 결과 길이가 승수나 피승수의 두배가 됨</em>)</li>
  <li>지수들을 더한다(<em>바이어스가 있다면 지수들을 더하 합의 바이어스 값은 두 배가 되므로 그 합으로부터 바이어스 값을 한 번 빼야한다, 나눗셈이면 더해야 함</em>)</li>
  <li>결과값을 정규화한다.</li>
</ol>

<h3 id="문제-2진-부동소수점-곱셈01011--23--0100125을-수행하라">문제: 2진 부동소수점 곱셈(0.1011 * 2^3) * (0.1001*2^5)을 수행하라.</h3>

<h2 id="풀이">풀이</h2>
<p><img src="image-13.png" alt="alt text" /></p>]]></content><author><name></name></author><category term="computer_structure" /><summary type="html"><![CDATA[2진 부동소수점 곱셈 과정 가수들을 곱한다(부호를 고려해야 함, 곱셈 결과 길이가 승수나 피승수의 두배가 됨) 지수들을 더한다(바이어스가 있다면 지수들을 더하 합의 바이어스 값은 두 배가 되므로 그 합으로부터 바이어스 값을 한 번 빼야한다, 나눗셈이면 더해야 함) 결과값을 정규화한다.]]></summary></entry><entry><title type="html">iee754_3</title><link href="http://localhost:4000/computer_structure/2024/11/19/ieee754_3.html" rel="alternate" type="text/html" title="iee754_3" /><published>2024-11-19T00:00:00+09:00</published><updated>2024-11-19T00:00:00+09:00</updated><id>http://localhost:4000/computer_structure/2024/11/19/ieee754_3</id><content type="html" xml:base="http://localhost:4000/computer_structure/2024/11/19/ieee754_3.html"><![CDATA[<h1 id="quadruple-precision-128bit">quadruple-precision: 128bit</h1>

<p>4배수 정밀도 수의 형식
<img src="image-10.png" alt="alt text" /></p>

<p>이 형식에서 지수의 바이어스 값은 (2^14 -1)
지수의 범위는 -(2^14) ~ (2^14 -1)이 된다.
(<em>책에서는 -16382~168383 이라고 하는데 나는 이해가 잘 안간다, -16384 아닌가?</em>)</p>

<p><img src="image-11.png" alt="alt text" /></p>]]></content><author><name></name></author><category term="computer_structure" /><summary type="html"><![CDATA[quadruple-precision: 128bit]]></summary></entry><entry><title type="html">iee754</title><link href="http://localhost:4000/computer_structure/2024/11/19/ieee754.html" rel="alternate" type="text/html" title="iee754" /><published>2024-11-19T00:00:00+09:00</published><updated>2024-11-19T00:00:00+09:00</updated><id>http://localhost:4000/computer_structure/2024/11/19/ieee754</id><content type="html" xml:base="http://localhost:4000/computer_structure/2024/11/19/ieee754.html"><![CDATA[<h1 id="ieee">ieee?</h1>
<p>ieee는 미국전기전자공학회
그래서 이 아이들이 뭘 했냐?
ieee 왈 ‘우리 부동 소수점 통일좀 해서 쓰자’ 라고 해서 이 통일된 부동소수점을 <em>IEEE754</em>라고 부르는 것</p>

<p>IEEE754 부동소수점 표준 형식에는</p>
<ol>
  <li>8-비트 길이의 지수를 가지는 32-비트 단일 -정밀도 형식과</li>
  <li>11-비트 길이의 지수를 가지는 64-비트 복수- 정밀도 형식이 있음
<img src="image.png" alt="alt text" /></li>
</ol>

<p>자 우리 Think를 해봅시다.
32-비트 에서 지수를 8비트 쓰면, 부호 1비트 까지 해서 32-9를 한 23비트가 가수로 쓰이겠죠?</p>

<p>그런데 우리가 이걸 정규화 형식으로 
N=(-1)^s<em>M</em>2^E을 이용해서 0.1bbb…<em>2^E 이런식으로 쓰고 소수점 바로 우측에 비트에 넣지 않았단 말이죠(</em>왜냐하면 넣지 않아도 거기 있는걸 아니깐 굳이 넣을 필요가 없음*)</p>

<p>IEEE표준에서도 첫번째 <code class="language-plaintext highlighter-rouge">1</code>은 포함시키지 않는다 이 말이죠</p>

<p>다만 여기서는 가수가 <strong>1.M<em>2^E**의 형태를 가진다는 점만 알아주면 됩니다.
(</em>소수점 좌측의 1을 무시하는거임, 이걸 우린 **숨겨진 비트</strong>라고 함*)</p>

<p>지수 필드는 <strong>바이어스된 2진수</strong>로 표현되며, 바이어스 값은 127입니다!!</p>

<p><img src="image-1.png" alt="alt text" /></p>

<h3 id="문제-10진수--13625를-ieee754-단일-정밀도-표준-형식으로-표현하라-단-바이어스-128">문제: 10진수 -13.625를 IEEE754 단일-정밀도 표준 형식으로 표현하라. (단, 바이어스 128)</h3>

<h2 id="풀이">풀이</h2>
<p><img src="image-6.png" alt="alt text" /></p>

<p><em>소수점 부분 이진수 구하는 방법</em></p>

<ol>
  <li>0.625<em>2=1.25 (</em>정수 부분 1. 소수부분 0.25가 남음*)</li>
  <li>0.25 * 2 =0.5 (<em>1번에서 남은 부분을 2로 곱함</em>)</li>
  <li>0.5 <em>2 =1 (</em>2번에서 남은 부분을 곱함*)</li>
</ol>

<p>문제를 다시 십진수로 바꾸면<br />
N=(-1)^1 * 2^130-127<br />
(<em>127을 바이어스로 더했으니 원래대로 되돌릴 때는 다시 빼줘야 함</em>)</p>

<p><img src="image-7.png" alt="alt text" />
을 이용해 정규화된 표현으로 표현된 2진수를 10진수로 변환할 수 있다.</p>]]></content><author><name></name></author><category term="computer_structure" /><summary type="html"><![CDATA[ieee? ieee는 미국전기전자공학회 그래서 이 아이들이 뭘 했냐? ieee 왈 ‘우리 부동 소수점 통일좀 해서 쓰자’ 라고 해서 이 통일된 부동소수점을 IEEE754라고 부르는 것]]></summary></entry><entry><title type="html">iee754_2</title><link href="http://localhost:4000/computer_structure/2024/11/19/ieee745_2.html" rel="alternate" type="text/html" title="iee754_2" /><published>2024-11-19T00:00:00+09:00</published><updated>2024-11-19T00:00:00+09:00</updated><id>http://localhost:4000/computer_structure/2024/11/19/ieee745_2</id><content type="html" xml:base="http://localhost:4000/computer_structure/2024/11/19/ieee745_2.html"><![CDATA[<h1 id="iee754">IEE754</h1>

<p>NaN 결과는 0으로 나누기, 음수에 대한 루트 계산 등과 같은 중요한 계산 오류들이 있다.</p>

<p>이 표준에서 정의하고 있는 NaN 형식은 M !=0이고 E=255(32-bit형식) 또는 E=2047(64-bit형식)</p>

<p>오버플로우가 발생한 경우에는 그 결과를 무한대로 취급하며, M=0 및 E=255(32-bit형식) 또는 E=2047(64-bit형식) 로 나타낸다.<br />
즉, 가수의 모든 필드에는 0, 지수 필드는 모두 1</p>

<p>언더플로우는 지수 필드의 모든 비트들을 0으로 세트, 가수는 0.M, 즉 소수점의 좌측 비트로서 0을 사용하여 수를 표현</p>

<p>32-비트 형식
<img src="image-8.png" alt="alt text" /></p>

<p>62-비트 형식
<img src="image-9.png" alt="alt text" /></p>]]></content><author><name></name></author><category term="computer_structure" /><summary type="html"><![CDATA[IEE754]]></summary></entry><entry><title type="html">biased.md</title><link href="http://localhost:4000/computer_structure/2024/11/19/biased.html" rel="alternate" type="text/html" title="biased.md" /><published>2024-11-19T00:00:00+09:00</published><updated>2024-11-19T00:00:00+09:00</updated><id>http://localhost:4000/computer_structure/2024/11/19/biased</id><content type="html" xml:base="http://localhost:4000/computer_structure/2024/11/19/biased.html"><![CDATA[<h1 id="바이어스">바이어스?</h1>

<p>우리가 정규화된 표현을 쓸 때 <strong>정수0</strong>에 대해서 문제가 발생함</p>

<p>컴퓨터는 <strong>zero-test</strong>를 수시로 해서 이게 0인지 아닌지 판별을 하는데, 이 컴퓨터가 0은 모든 비트들이 0이다라는걸 기본적으로 깔고 감<br />
<img src="image-3.png" alt="alt text" /><br />
이렇게 하면 아주 이상적</p>

<p>이제 지수가 음수 일때를 생각해보자.<br />
지수가 음수면 일단 지수에도 부호를 넣어줘야 함 -&gt; 비트 낭비하기 싫음 -&gt; 음수를 양수로 처리해서 쓰자 -&gt; 바이어스 등장!!<br />
(<em>그리고 지수가 한 없이 큰 음수이면 언더플로우나 정밀도 손실이 발생할 수 있다</em>)</p>

<p>ex) 바이어스가 127이면 지수 비트에 01111111을 더해주면 끝</p>

<p><img src="image-4.png" alt="alt text" /></p>

<p><img src="image-5.png" alt="alt text" /></p>

<p>M의 범위가 0.5보다 크거나 같고 1-2^-23보다 작거나 같아야 할것 같은데 왜 2^-24보다 작거나 같은지 이해가 안가네</p>]]></content><author><name></name></author><category term="computer_structure" /><summary type="html"><![CDATA[바이어스?]]></summary></entry><entry><title type="html">add</title><link href="http://localhost:4000/computer_structure/2024/11/19/add.html" rel="alternate" type="text/html" title="add" /><published>2024-11-19T00:00:00+09:00</published><updated>2024-11-19T00:00:00+09:00</updated><id>http://localhost:4000/computer_structure/2024/11/19/add</id><content type="html" xml:base="http://localhost:4000/computer_structure/2024/11/19/add.html"><![CDATA[<h1 id="덧샘과-뺄셈">덧샘과 뺄셈</h1>

<ol>
  <li>두 수의 소수점 위치를 일치시킨다.(<em>두 수들중에서 더 작은 수를 우측으로 시프트</em>)</li>
  <li>가수들 간에 더하기를 수행</li>
  <li>결과를 정규화 시킨다.</li>
</ol>

<h3 id="문제-부동소수점-수들-간의-덧셈0110100--23--011110025을-수행하라">문제: 부동소수점 수들 간의 덧셈(0.110100 * 2^3 + 0.111100*2^5)을 수행하라.</h3>

<h2 id="풀이">풀이</h2>
<p><img src="image-12.png" alt="alt text" /></p>

<p>뺄셈도 같은 방법으로 처리 가능(<em>감수를 2의 보수로 변환하여 더해야 한다</em>)</p>]]></content><author><name></name></author><category term="computer_structure" /><summary type="html"><![CDATA[덧샘과 뺄셈]]></summary></entry><entry><title type="html">main2</title><link href="http://localhost:4000/hnv/2024/11/14/clonecoding5.html" rel="alternate" type="text/html" title="main2" /><published>2024-11-14T00:00:00+09:00</published><updated>2024-11-14T00:00:00+09:00</updated><id>http://localhost:4000/hnv/2024/11/14/clonecoding5</id><content type="html" xml:base="http://localhost:4000/hnv/2024/11/14/clonecoding5.html"><![CDATA[<h1 id="class-에서-모르는-것만-하자">class 에서 모르는 것만 하자</h1>
<p>이제는 시간이 별로 없다.<br />
그냥 대충 해야겠다.</p>

<p><code class="language-plaintext highlighter-rouge">todolist()</code>는 파이썬에서 리스트나 배열 등을 리스트 타입으로 변환해주는 함수입니다. 주로 아래와 같은 상황에서 사용됩니다.</p>

<p>Pandas Series나 DataFrame의 특정 열을 리스트로 변환할 때:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">({</span><span class="sh">'</span><span class="s">col1</span><span class="sh">'</span><span class="p">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="sh">'</span><span class="s">col2</span><span class="sh">'</span><span class="p">:</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]})</span>
<span class="n">col1_list</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="sh">'</span><span class="s">col1</span><span class="sh">'</span><span class="p">].</span><span class="nf">tolist</span><span class="p">()</span>  <span class="c1"># [1, 2, 3]
</span>
</code></pre></div></div>

<p>Numpy 배열을 리스트로 변환할 때:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import numpy as np
array = np.array([1, 2, 3])
list_from_array = array.tolist()  # [1, 2, 3]
</code></pre></div></div>]]></content><author><name></name></author><category term="hnv" /><summary type="html"><![CDATA[class 에서 모르는 것만 하자 이제는 시간이 별로 없다. 그냥 대충 해야겠다.]]></summary></entry><entry><title type="html">dataset</title><link href="http://localhost:4000/hnv/2024/11/14/dataset.html" rel="alternate" type="text/html" title="dataset" /><published>2024-11-14T00:00:00+09:00</published><updated>2024-11-14T00:00:00+09:00</updated><id>http://localhost:4000/hnv/2024/11/14/dataset</id><content type="html" xml:base="http://localhost:4000/hnv/2024/11/14/dataset.html"><![CDATA[<p>```python
import os
import glob</p>

<p>import numpy as np
from PIL import Image
import torch
from torch.utils.data import DataLoader
from torchvision import transforms
from sklearn.model_selection import train_test_split
import lightning as L</p>

<p>SEED = 36
L.seed_everything(SEED)</p>

<p>class ImageNetDataModule(L.LightningDataModule):
    def <strong>init</strong>(self, data_path: str = ‘../../dataset’, batch_size: int = 32, mode: str = ‘train’):
        super().<strong>init</strong>()
        self.mode = mode
        if self.mode == ‘train’:
            self.dataset = glob.glob(os.path.join(data_path, ‘<em>/</em>.jpeg’))
        else:
            self.data_path = data_path
            batch_size = 1</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    self.batch_size = batch_size
    self.transform = transforms.Compose([
        transforms.Resize((256, 256)),
        transforms.ToTensor(),
        transforms.Normalize((0.485, 0.456, 0.406), (0.229, 0.224, 0.225))
        ])

def setup(self, stage: str):
    if self.trainer is not None:
        if self.batch_size % self.trainer.world_size != 0:
            raise RuntimeError(
                f"Batch size ({self.batch_size}) is not divisible by the number of devices ({self.trainer.world_size})."
            )
        self.batch_size_per_device = self.batch_size // self.trainer.world_size

    if self.mode == 'train':
        class_data = list(map(lambda path: os.path.basename(os.path.dirname(path)).split('-', 1), self.dataset))
        class_ids, _ = zip(*class_data)
        train_x, val_x, train_y, val_y = train_test_split(self.dataset, class_ids, test_size=0.2, stratify=class_ids)
        val_x, test_x, val_y, test_y = train_test_split(val_x, val_y, test_size=0.5, stratify=val_y)

        train_data = [(x, y) for x, y in zip(train_x, train_y)]
        val_data = [(x, y) for x, y in zip(val_x, val_y)]
        test_data = [(x, y) for x, y in zip(test_x, test_y)]
    else:
        pred_data = [Image.open(self.data_path).convert('RGB')]

    if stage == 'fit':
        self.train_dataset = train_data
        self.val_dataset = val_data
    
    if stage == 'test':
        self.test_dataset = test_data

    if stage == 'predict':
        self.pred_dataset = pred_data

def _train_collate_fn(self, batch):
    images, labels = zip(*batch)
    images = [self.transform(Image.open(img).convert('RGB')) for img in images]
    labels = torch.tensor([int(label) for label in labels], dtype=torch.long)
    return torch.stack(images), labels

def _predict_collate_fn(self, batch):
    img = batch[0]
    input = self.transform(img).unsqueeze(0)
    return input, np.array(img)

def train_dataloader(self):
    return DataLoader(self.train_dataset, batch_size=self.batch_size_per_device, shuffle=True, collate_fn=self._train_collate_fn)

def val_dataloader(self):
    return DataLoader(self.val_dataset, batch_size=self.batch_size_per_device, shuffle=False, collate_fn=self._train_collate_fn)

def test_dataloader(self):
    return DataLoader(self.test_dataset, batch_size=self.batch_size_per_device, shuffle=False, collate_fn=self._train_collate_fn)

def predict_dataloader(self):
    return DataLoader(self.pred_dataset, batch_size=self.batch_size_per_device, shuffle=False, collate_fn=self._predict_collate_fn)  ```         0.
</code></pre></div></div>]]></content><author><name></name></author><category term="hnv" /><summary type="html"><![CDATA[```python import os import glob]]></summary></entry><entry><title type="html">paranoma</title><link href="http://localhost:4000/computervision/2024/11/13/project.html" rel="alternate" type="text/html" title="paranoma" /><published>2024-11-13T00:00:00+09:00</published><updated>2024-11-13T00:00:00+09:00</updated><id>http://localhost:4000/computervision/2024/11/13/project</id><content type="html" xml:base="http://localhost:4000/computervision/2024/11/13/project.html"><![CDATA[<h1 id="환경-설정하기-poetry">환경 설정하기 (poetry)</h1>
<ol>
  <li>conda로 가상환경을 만들어준다</li>
  <li>활성화된 가상환경에서 <code class="language-plaintext highlighter-rouge">pip install poetry</code></li>
  <li><code class="language-plaintext highlighter-rouge">poetry config virtualenvs.create false</code> poetry의 가상환경 생성 기능 비활성화</li>
  <li><code class="language-plaintext highlighter-rouge">poetry init</code></li>
  <li><code class="language-plaintext highlighter-rouge">poetry add opencv-python PyQt6</code></li>
</ol>

<h1 id="환경-설정하기-conda">환경 설정하기 (conda)</h1>
<ol>
  <li>수동으로 <code class="language-plaintext highlighter-rouge">enviroment.yml</code>을 작성</li>
  <li><code class="language-plaintext highlighter-rouge">conda env create -f environment.yaml</code> 를 해주면 됨</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>poetry add pyinstaller(visionagent) PS C:\Users\junun\documents\visionproject\projects\visionagent&gt; poetry add pyinstaller
Using version ^6.11.1 for pyinstaller

Updating dependencies
Resolving dependencies... (0.2s)

The current project's supported Python range (&gt;=3.10,&lt;4.0) is not compatible with some of the required packages Python requirement:
  - pyinstaller requires Python &lt;3.14,&gt;=3.8, so it will not be satisfied for Python &gt;=3.14,&lt;4.0

Because no versions of pyinstaller match &gt;6.11.1,&lt;7.0.0
 and pyinstaller (6.11.1) requires Python &lt;3.14,&gt;=3.8, pyinstaller is forbidden.
So, because vision depends on pyinstaller (^6.11.1), version solving failed.

  • Check your dependencies Python requirement: The Python requirement can be specified via the python or markers properties

    For pyinstaller, a possible solution would be to set the python property to "&gt;=3.10,&lt;3.14"

    https://python-poetry.org/docs/dependency-specification/#python-restricted-dependencies,
    https://python-poetry.org/docs/dependency-specification/#using-environment-markers
</code></pre></div></div>
<p>하면서 python의 버전이 맞지 않는 다는 에러가 발생했다.</p>

<h3 id="해결-방법">해결 방법</h3>
<ol>
  <li><code class="language-plaintext highlighter-rouge">toml</code> 파일에서 python 버전 범위를 바꿔줬다</li>
  <li><code class="language-plaintext highlighter-rouge">poetry lock</code>을 통해 의존성 파일 업데이트</li>
  <li><code class="language-plaintext highlighter-rouge">poetry install</code> 의존성을 다시 설치</li>
</ol>

<p>만약 poetry로 안했다면 뭐가 문제인지 한참을 해맸을까… 무섭다…</p>

<h3 id="pyinstaller-설치">pyinstaller 설치</h3>
<ol>
  <li><code class="language-plaintext highlighter-rouge">pip install pyinstaller</code> (<em>poetry add  pyinstaller</em>)</li>
  <li><code class="language-plaintext highlighter-rouge">pyinstaller --onefile src/paranoma.py</code></li>
  <li>생성된  dist 폴더에서 실행 <code class="language-plaintext highlighter-rouge">dist/paranoma.exe</code></li>
</ol>]]></content><author><name></name></author><category term="computervision" /><summary type="html"><![CDATA[환경 설정하기 (poetry) conda로 가상환경을 만들어준다 활성화된 가상환경에서 pip install poetry poetry config virtualenvs.create false poetry의 가상환경 생성 기능 비활성화 poetry init poetry add opencv-python PyQt6]]></summary></entry><entry><title type="html">paranoma</title><link href="http://localhost:4000/computervision/2024/11/12/chap6-5.html" rel="alternate" type="text/html" title="paranoma" /><published>2024-11-12T00:00:00+09:00</published><updated>2024-11-12T00:00:00+09:00</updated><id>http://localhost:4000/computervision/2024/11/12/chap6-5</id><content type="html" xml:base="http://localhost:4000/computervision/2024/11/12/chap6-5.html"><![CDATA[<h1 id="sift를-이용한-영상-봉합">SIFT를 이용한 영상 봉합</h1>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">PyQt6.QtWidgets</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">import</span> <span class="n">cv2</span>
<span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="n">winsound</span>
<span class="kn">import</span> <span class="n">sys</span>

<span class="k">class</span> <span class="nc">Panorama</span><span class="p">(</span><span class="n">QMainWindow</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="nf">super</span><span class="p">().</span><span class="nf">__init__</span><span class="p">()</span>
        <span class="n">self</span><span class="p">.</span><span class="nf">setWindowTitle</span><span class="p">(</span><span class="sh">"</span><span class="s">파노라마 영상</span><span class="sh">"</span><span class="p">)</span>
        <span class="n">self</span><span class="p">.</span><span class="nf">setGeometry</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="mi">200</span><span class="p">,</span> <span class="mi">700</span><span class="p">,</span> <span class="mi">200</span><span class="p">)</span>

        <span class="n">collectButton</span> <span class="o">=</span> <span class="nc">QPushButton</span><span class="p">(</span><span class="sh">"</span><span class="s">영상 수집</span><span class="sh">"</span><span class="p">,</span> <span class="n">self</span><span class="p">)</span>
        <span class="n">self</span><span class="p">.</span><span class="n">showButton</span> <span class="o">=</span> <span class="nc">QPushButton</span><span class="p">(</span><span class="sh">"</span><span class="s">영상 보기</span><span class="sh">"</span><span class="p">,</span> <span class="n">self</span><span class="p">)</span>
        <span class="n">self</span><span class="p">.</span><span class="n">stitchButton</span> <span class="o">=</span> <span class="nc">QPushButton</span><span class="p">(</span><span class="sh">"</span><span class="s">봉합</span><span class="sh">"</span><span class="p">,</span> <span class="n">self</span><span class="p">)</span>
        <span class="n">self</span><span class="p">.</span><span class="n">saveButton</span> <span class="o">=</span> <span class="nc">QPushButton</span><span class="p">(</span><span class="sh">"</span><span class="s">저장</span><span class="sh">"</span><span class="p">,</span> <span class="n">self</span><span class="p">)</span>
        <span class="n">quitButton</span> <span class="o">=</span> <span class="nc">QPushButton</span><span class="p">(</span><span class="sh">"</span><span class="s">나가기</span><span class="sh">"</span><span class="p">,</span> <span class="n">self</span><span class="p">)</span>
        <span class="n">self</span><span class="p">.</span><span class="n">label</span> <span class="o">=</span> <span class="nc">QLabel</span><span class="p">(</span><span class="sh">"</span><span class="s">환영합니다!</span><span class="sh">"</span><span class="p">,</span> <span class="n">self</span><span class="p">)</span>

        <span class="n">collectButton</span><span class="p">.</span><span class="nf">setGeometry</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">30</span><span class="p">)</span>
        <span class="n">self</span><span class="p">.</span><span class="n">showButton</span><span class="p">.</span><span class="nf">setGeometry</span><span class="p">(</span><span class="mi">110</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">30</span><span class="p">)</span>
        <span class="n">self</span><span class="p">.</span><span class="n">stitchButton</span><span class="p">.</span><span class="nf">setGeometry</span><span class="p">(</span><span class="mi">210</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">30</span><span class="p">)</span>
        <span class="n">self</span><span class="p">.</span><span class="n">saveButton</span><span class="p">.</span><span class="nf">setGeometry</span><span class="p">(</span><span class="mi">310</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">30</span><span class="p">)</span>
        <span class="n">quitButton</span><span class="p">.</span><span class="nf">setGeometry</span><span class="p">(</span><span class="mi">450</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">30</span><span class="p">)</span>
        <span class="n">self</span><span class="p">.</span><span class="n">label</span><span class="p">.</span><span class="nf">setGeometry</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">70</span><span class="p">,</span> <span class="mi">600</span><span class="p">,</span> <span class="mi">170</span><span class="p">)</span>

        <span class="n">self</span><span class="p">.</span><span class="n">showButton</span><span class="p">.</span><span class="nf">setEnabled</span><span class="p">(</span><span class="bp">False</span><span class="p">)</span>
        <span class="n">self</span><span class="p">.</span><span class="n">stitchButton</span><span class="p">.</span><span class="nf">setEnabled</span><span class="p">(</span><span class="bp">False</span><span class="p">)</span>
        <span class="n">self</span><span class="p">.</span><span class="n">saveButton</span><span class="p">.</span><span class="nf">setEnabled</span><span class="p">(</span><span class="bp">False</span><span class="p">)</span>

        <span class="n">collectButton</span><span class="p">.</span><span class="n">clicked</span><span class="p">.</span><span class="nf">connect</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">collectFunction</span><span class="p">)</span>
        <span class="n">self</span><span class="p">.</span><span class="n">showButton</span><span class="p">.</span><span class="n">clicked</span><span class="p">.</span><span class="nf">connect</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">showFunction</span><span class="p">)</span>
        <span class="n">self</span><span class="p">.</span><span class="n">stitchButton</span><span class="p">.</span><span class="n">clicked</span><span class="p">.</span><span class="nf">connect</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">stitchFunction</span><span class="p">)</span>
        <span class="n">self</span><span class="p">.</span><span class="n">saveButton</span><span class="p">.</span><span class="n">clicked</span><span class="p">.</span><span class="nf">connect</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">saveFunction</span><span class="p">)</span>
        <span class="n">quitButton</span><span class="p">.</span><span class="n">clicked</span><span class="p">.</span><span class="nf">connect</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">quitFunction</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">collectFunction</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="n">self</span><span class="p">.</span><span class="n">showButton</span><span class="p">.</span><span class="nf">setEnabled</span><span class="p">(</span><span class="bp">False</span><span class="p">)</span> <span class="c1"># 버튼 비활성
</span>        <span class="n">self</span><span class="p">.</span><span class="n">stitchButton</span><span class="p">.</span><span class="nf">setEnabled</span><span class="p">(</span><span class="bp">False</span><span class="p">)</span>
        <span class="n">self</span><span class="p">.</span><span class="n">saveButton</span><span class="p">.</span><span class="nf">setEnabled</span><span class="p">(</span><span class="bp">False</span><span class="p">)</span>
        <span class="n">self</span><span class="p">.</span><span class="n">label</span><span class="p">.</span><span class="nf">setText</span><span class="p">(</span><span class="sh">"</span><span class="s">c를 여러 번 눌러 수집하고 끝나면 q를 눌러 비디오를 끕니다.</span><span class="sh">"</span><span class="p">)</span>

        <span class="n">self</span><span class="p">.</span><span class="n">cap</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="nc">VideoCapture</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">CAP_DSHOW</span><span class="p">)</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">self</span><span class="p">.</span><span class="n">cap</span><span class="p">.</span><span class="nf">isOpened</span><span class="p">():</span><span class="n">sys</span><span class="p">.</span><span class="nf">exit</span><span class="p">(</span><span class="sh">"</span><span class="s">카메라 연결 실패</span><span class="sh">"</span><span class="p">)</span>

        <span class="n">self</span><span class="p">.</span><span class="n">imgs</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
            <span class="n">ret</span><span class="p">,</span> <span class="n">frame</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">cap</span><span class="p">.</span><span class="nf">read</span><span class="p">()</span>
            <span class="k">if</span> <span class="ow">not</span> <span class="n">ret</span><span class="p">:</span><span class="k">break</span>

            <span class="n">cv2</span><span class="p">.</span><span class="nf">imshow</span><span class="p">(</span><span class="sh">"</span><span class="s">video display</span><span class="sh">"</span><span class="p">,</span> <span class="n">frame</span><span class="p">)</span>

            <span class="n">key</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="nf">waitKey</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
            <span class="k">if</span> <span class="n">key</span> <span class="o">==</span> <span class="nf">ord</span><span class="p">(</span><span class="sh">"</span><span class="s">c</span><span class="sh">"</span><span class="p">):</span>
                <span class="n">self</span><span class="p">.</span><span class="n">imgs</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">frame</span><span class="p">)</span>  <span class="c1"># 영상 저장
</span>            <span class="k">elif</span> <span class="n">key</span> <span class="o">==</span> <span class="nf">ord</span><span class="p">(</span><span class="sh">"</span><span class="s">q</span><span class="sh">"</span><span class="p">):</span>
                <span class="n">self</span><span class="p">.</span><span class="n">cap</span><span class="p">.</span><span class="nf">release</span><span class="p">()</span>
                <span class="n">cv2</span><span class="p">.</span><span class="nf">destroyWindow</span><span class="p">(</span><span class="sh">"</span><span class="s">video display</span><span class="sh">"</span><span class="p">)</span>
                <span class="k">break</span>

        <span class="k">if</span> <span class="nf">len</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">imgs</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">2</span><span class="p">:</span>  <span class="c1"># 수집한 영상이 2장 이상이면 버튼 활성화
</span>            <span class="n">self</span><span class="p">.</span><span class="n">showButton</span><span class="p">.</span><span class="nf">setEnabled</span><span class="p">(</span><span class="bp">True</span><span class="p">)</span>
            <span class="n">self</span><span class="p">.</span><span class="n">stitchButton</span><span class="p">.</span><span class="nf">setEnabled</span><span class="p">(</span><span class="bp">True</span><span class="p">)</span>
            <span class="n">self</span><span class="p">.</span><span class="n">saveButton</span><span class="p">.</span><span class="nf">setEnabled</span><span class="p">(</span><span class="bp">True</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">showFunction</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="n">self</span><span class="p">.</span><span class="n">label</span><span class="p">.</span><span class="nf">setText</span><span class="p">(</span><span class="sh">"</span><span class="s">수집된 영상은 </span><span class="sh">"</span> <span class="o">+</span> <span class="nf">str</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">imgs</span><span class="p">))</span> <span class="o">+</span> <span class="sh">"</span><span class="s">장 입니다.</span><span class="sh">"</span><span class="p">)</span>
        <span class="n">stack</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="nf">resize</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">imgs</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">dsize</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="n">fx</span><span class="o">=</span><span class="mf">0.25</span><span class="p">,</span> <span class="n">fy</span><span class="o">=</span><span class="mf">0.25</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nf">len</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">imgs</span><span class="p">)):</span>
            <span class="n">stack</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">hstack</span><span class="p">((</span><span class="n">stack</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="nf">resize</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">imgs</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">dsize</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="n">fx</span><span class="o">=</span><span class="mf">0.25</span><span class="p">,</span> <span class="n">fy</span><span class="o">=</span><span class="mf">0.25</span><span class="p">)))</span>
        <span class="n">cv2</span><span class="p">.</span><span class="nf">imshow</span><span class="p">(</span><span class="sh">"</span><span class="s">Image collection</span><span class="sh">"</span><span class="p">,</span> <span class="n">stack</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">stitchFunction</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="n">stitcher</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="nc">Stitcher_create</span><span class="p">()</span>  <span class="c1"># sticher 객체 생성
</span>        <span class="n">status</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">img_stitched</span> <span class="o">=</span> <span class="n">stitcher</span><span class="p">.</span><span class="nf">stitch</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">imgs</span><span class="p">)</span>  <span class="c1"># 봉합 성공 여부와 봉합된 영상을 반환
</span>        <span class="k">if</span> <span class="n">status</span> <span class="o">==</span> <span class="n">cv2</span><span class="p">.</span><span class="n">STITCHER_OK</span><span class="p">:</span>  <span class="c1"># 스티칭 작업이 성공적으로 완료되면
</span>            <span class="n">cv2</span><span class="p">.</span><span class="nf">imshow</span><span class="p">(</span><span class="sh">"</span><span class="s">Image stitched panorama</span><span class="sh">"</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">img_stitched</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">winsound</span><span class="p">.</span><span class="nc">Beep</span><span class="p">(</span><span class="mi">3000</span><span class="p">,</span> <span class="mi">500</span><span class="p">)</span>
            <span class="n">self</span><span class="p">.</span><span class="n">label</span><span class="p">.</span><span class="nf">setText</span><span class="p">(</span><span class="sh">"</span><span class="s">파노라마 제작에 실패했습니다. 다시 시도하세요.</span><span class="sh">"</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">saveFunction</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="n">fname</span> <span class="o">=</span> <span class="n">QFileDialog</span><span class="p">.</span><span class="nf">getSaveFileName</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="sh">"</span><span class="s">파일 저장</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">./</span><span class="sh">"</span><span class="p">)</span>
        <span class="n">cv2</span><span class="p">.</span><span class="nf">imwrite</span><span class="p">(</span><span class="n">fname</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">self</span><span class="p">.</span><span class="n">img_stitched</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">quitFunction</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="n">self</span><span class="p">.</span><span class="n">cap</span><span class="p">.</span><span class="nf">release</span><span class="p">()</span>
        <span class="n">cv2</span><span class="p">.</span><span class="nf">destroyAllWindows</span><span class="p">()</span>
        <span class="n">self</span><span class="p">.</span><span class="nf">close</span><span class="p">()</span>

<span class="n">app</span> <span class="o">=</span> <span class="nc">QApplication</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">argv</span><span class="p">)</span>
<span class="n">win</span> <span class="o">=</span> <span class="nc">Panorama</span><span class="p">()</span>
<span class="n">win</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
<span class="n">app</span><span class="p">.</span><span class="nf">exec</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>QFileDialog는 PyQt와 Qt 라이브러리에서 제공하는 파일 선택 대화 상자입니다. 사용자가 파일이나 폴더를 열거나 저장할 때 파일 경로를 쉽게 선택할 수 있도록 GUI 대화 상자를 제공합니다.

QFileDialog는 일반적으로 파일을 열기, 저장하거나 특정 디렉토리 선택 기능이 필요할 때 사용됩니다.

주요 기능과 메서드
QFileDialog는 다음과 같은 기능을 제공합니다.

파일 열기 (getOpenFileName): 파일을 선택하는 대화 상자를 열고, 사용자가 선택한 파일의 경로를 반환합니다.
여러 파일 열기 (getOpenFileNames): 여러 파일을 선택할 수 있는 대화 상자를 열고, 선택한 파일들의 경로 목록을 반환합니다.
파일 저장 (getSaveFileName): 파일을 저장할 위치를 선택할 수 있는 대화 상자를 열어, 사용자가 선택한 파일 경로를 반환합니다.
디렉토리 선택 (getExistingDirectory): 폴더를 선택할 수 있는 대화 상자를 열고, 선택한 폴더의 경로를 반환합니다.
</code></pre></div></div>

<p>왜 봉합이 안되나 했더니</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>같은 이미지로 스티칭 시도 시 발생하는 일:
이미지 간 겹침이 없음: stitch() 함수는 여러 이미지를 겹치는 부분을 찾아서 이어붙입니다. 하지만 같은 이미지를 주면, 겹칠 부분이 없기 때문에 이미지 매칭을 제대로 할 수 없습니다.
스티칭 실패: 동일한 이미지를 입력하면, 스티칭에 실패하거나 결과가 제대로 나오지 않습니다. cv2.Stitcher_create() 함수는 두 이미지 이상의 다양한 정보와 겹침 영역을 필요로 하기 때문에 같은 이미지를 주면 스티칭 작업이 불가능합니다.
</code></pre></div></div>]]></content><author><name></name></author><category term="computervision" /><summary type="html"><![CDATA[SIFT를 이용한 영상 봉합 ```python from PyQt6.QtWidgets import * import cv2 import numpy as np import winsound import sys]]></summary></entry></feed>