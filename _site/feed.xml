<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-11-20T12:49:31+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">RabbitJun’s Blog</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">correlation</title><link href="http://localhost:4000/deeplearning/2024/11/20/Correlation.html" rel="alternate" type="text/html" title="correlation" /><published>2024-11-20T00:00:00+09:00</published><updated>2024-11-20T00:00:00+09:00</updated><id>http://localhost:4000/deeplearning/2024/11/20/Correlation</id><content type="html" xml:base="http://localhost:4000/deeplearning/2024/11/20/Correlation.html"><![CDATA[<h1 id="상관관계">상관관계</h1>
<p>두 변수 간의 연관성을 나타내는 통계적 개념<br />
우리는 좌표와 0과 1 의 관계를 살펴 볼 것임</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="n">seaborn</span> <span class="k">as</span> <span class="n">sns</span>
<span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">from</span> <span class="n">dataload</span> <span class="kn">import</span> <span class="n">load_data</span>

<span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>  <span class="c1"># 랜덤 샘플링에 사용
</span>
<span class="c1"># 데이터 로드
</span><span class="n">train_x</span><span class="p">,</span> <span class="n">train_y</span><span class="p">,</span> <span class="n">test_x</span><span class="p">,</span> <span class="n">test_y</span><span class="p">,</span> <span class="n">val_x</span><span class="p">,</span> <span class="n">val_y</span> <span class="o">=</span> <span class="nf">load_data</span><span class="p">(</span><span class="sh">'</span><span class="s">../data/train</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">../data/test</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">../data/val</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># 훈련 데이터를 DataFrame으로 변환
</span><span class="n">train_df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="n">val_x</span><span class="p">)</span>
<span class="n">train_df</span><span class="p">[</span><span class="sh">'</span><span class="s">label</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">val_y</span>  <span class="c1"># 레이블 추가
</span>
<span class="c1"># 랜덤으로 50개 샘플 선택
</span><span class="n">sampled_df</span> <span class="o">=</span> <span class="n">train_df</span><span class="p">.</span><span class="nf">sample</span><span class="p">(</span><span class="n">n</span><span class="o">=</span><span class="mi">50</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>  <span class="c1"># random_state로 재현성 유지
</span>
<span class="c1"># 상관계수 계산
</span><span class="n">correlation_matrix</span> <span class="o">=</span> <span class="n">sampled_df</span><span class="p">.</span><span class="nf">corr</span><span class="p">()</span>

<span class="c1"># 상관계수 히트맵 시각화
</span><span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="nf">heatmap</span><span class="p">(</span><span class="n">correlation_matrix</span><span class="p">,</span> <span class="n">annot</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">fmt</span><span class="o">=</span><span class="sh">"</span><span class="s">.2f</span><span class="sh">"</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="sh">"</span><span class="s">coolwarm</span><span class="sh">"</span><span class="p">,</span> <span class="n">cbar</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="sh">"</span><span class="s">Correlation Matrix of Randomly Sampled Features and Label</span><span class="sh">"</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">savefig</span><span class="p">(</span><span class="sh">"</span><span class="s">correlation_matrix_sampled_heatmap.png</span><span class="sh">"</span><span class="p">,</span> <span class="n">dpi</span><span class="o">=</span><span class="mi">300</span><span class="p">,</span> <span class="n">bbox_inches</span><span class="o">=</span><span class="sh">"</span><span class="s">tight</span><span class="sh">"</span><span class="p">)</span>

<span class="c1"># 레이블과 각 변수 간의 상관계수 추출
</span><span class="n">label_correlation</span> <span class="o">=</span> <span class="n">correlation_matrix</span><span class="p">[</span><span class="sh">'</span><span class="s">label</span><span class="sh">'</span><span class="p">].</span><span class="nf">sort_values</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Correlation of features with label (sampled data):</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">label_correlation</span><span class="p">)</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">correlation_matrix = combined_data.corr()</code>는 <code class="language-plaintext highlighter-rouge">pandas</code>에서 제공하는 메서드</p>
<ul>
  <li>데이터프레임의 각 열(컬럼) 간의 <strong>상관관계(coefficient of correlation)</strong>를 계산합니다.</li>
  <li>이 상관계수는 두 변수 간의 선형 관계를 나타내며, 값은 -1에서 1 사이입니다.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1: 완벽한 양의 상관관계 (하나가 증가하면 다른 하나도 증가)
-1: 완벽한 음의 상관관계 (하나가 증가하면 다른 하나는 감소)
0: 상관관계 없음 (변수 간에 선형 관계가 없음)
</code></pre></div></div>

<h3 id="중요한-점"><strong>중요한 점</strong></h3>
<p><code class="language-plaintext highlighter-rouge">combined_data.corr()</code>는 기본적으로 숫자형 데이터만 사용합니다.<br />
따라서, CSV 파일의 이름이나 좌표(특정 텍스트 또는 범주형 데이터)가 포함된 경우, 이를 수치 데이터로 변환하거나 그룹핑 작업을 수행해야 상관관계를 분석할 수 있습니다.</p>

<h2 id="실패">실패</h2>
<p>자원을 엄청 잡아먹더니<br />
상관관계 분석이 안된다…</p>]]></content><author><name></name></author><category term="deeplearning" /><summary type="html"><![CDATA[상관관계 두 변수 간의 연관성을 나타내는 통계적 개념 우리는 좌표와 0과 1 의 관계를 살펴 볼 것임]]></summary></entry><entry><title type="html">wandb</title><link href="http://localhost:4000/deeplearning/2024/11/20/wandb.html" rel="alternate" type="text/html" title="wandb" /><published>2024-11-20T00:00:00+09:00</published><updated>2024-11-20T00:00:00+09:00</updated><id>http://localhost:4000/deeplearning/2024/11/20/wandb</id><content type="html" xml:base="http://localhost:4000/deeplearning/2024/11/20/wandb.html"><![CDATA[<h1 id="wandb를-사용하자">wandb를 사용하자</h1>
<p>먼저 wandb에 회원 가입한 후에
<code class="language-plaintext highlighter-rouge">pip install wandb</code>를 해주고
<code class="language-plaintext highlighter-rouge">wandb login</code> 후에 홈페이지에 있는 api를 복사해서 넣어주면 된다.
터미널에 입력할 때 키가 보이지 않느데 잉때 너무 당황하지 말자</p>

<h3 id="wandb-초기화">Wandb 초기화</h3>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">wandb</span><span class="p">.</span><span class="nf">init</span><span class="p">(</span><span class="n">project</span><span class="o">=</span><span class="sh">"</span><span class="s">mlp-binary-classification</span><span class="sh">"</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="sh">"</span><span class="s">binary_classification_experiment</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div>
<h3 id="모델-하이퍼파라미터-로깅">모델 하이퍼파라미터 로깅</h3>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">wandb</span><span class="p">.</span><span class="n">config</span><span class="p">.</span><span class="nf">update</span><span class="p">({</span>
    <span class="sh">"</span><span class="s">epochs</span><span class="sh">"</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span>
    <span class="sh">"</span><span class="s">batch_size</span><span class="sh">"</span><span class="p">:</span> <span class="mi">32</span><span class="p">,</span>
    <span class="sh">"</span><span class="s">learning_rate</span><span class="sh">"</span><span class="p">:</span> <span class="mf">0.001</span><span class="p">,</span>
    <span class="sh">"</span><span class="s">hidden_size</span><span class="sh">"</span><span class="p">:</span> <span class="mi">64</span><span class="p">,</span>
    <span class="sh">"</span><span class="s">input_size</span><span class="sh">"</span><span class="p">:</span> <span class="n">train_x</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span>
    <span class="sh">"</span><span class="s">output_size</span><span class="sh">"</span><span class="p">:</span> <span class="mi">2</span>
<span class="p">})</span>
</code></pre></div></div>

<h3 id="wandb-로그-기록">Wandb 로그 기록</h3>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">wandb</span><span class="p">.</span><span class="nf">log</span><span class="p">({</span>
    <span class="sh">"</span><span class="s">epoch</span><span class="sh">"</span><span class="p">:</span> <span class="n">epoch</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span>
    <span class="sh">"</span><span class="s">train_loss</span><span class="sh">"</span><span class="p">:</span> <span class="n">train_loss</span><span class="p">,</span>
    <span class="sh">"</span><span class="s">val_loss</span><span class="sh">"</span><span class="p">:</span> <span class="n">val_loss</span><span class="p">,</span>
    <span class="sh">"</span><span class="s">train_accuracy</span><span class="sh">"</span><span class="p">:</span> <span class="n">train_accuracy</span><span class="p">,</span>
    <span class="sh">"</span><span class="s">val_accuracy</span><span class="sh">"</span><span class="p">:</span> <span class="n">val_accuracy</span>
<span class="p">})</span>
</code></pre></div></div>

<p>전체 코드</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Wandb 초기화
</span><span class="n">wandb</span><span class="p">.</span><span class="nf">init</span><span class="p">(</span><span class="n">project</span><span class="o">=</span><span class="sh">"</span><span class="s">mlp-binary-classification</span><span class="sh">"</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="sh">"</span><span class="s">binary_classification_experiment</span><span class="sh">"</span><span class="p">)</span>

<span class="c1"># 모델 하이퍼파라미터 로깅
</span><span class="n">wandb</span><span class="p">.</span><span class="n">config</span><span class="p">.</span><span class="nf">update</span><span class="p">({</span>
    <span class="sh">"</span><span class="s">epochs</span><span class="sh">"</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span>
    <span class="sh">"</span><span class="s">batch_size</span><span class="sh">"</span><span class="p">:</span> <span class="mi">32</span><span class="p">,</span>
    <span class="sh">"</span><span class="s">learning_rate</span><span class="sh">"</span><span class="p">:</span> <span class="mf">0.001</span><span class="p">,</span>
    <span class="sh">"</span><span class="s">hidden_size</span><span class="sh">"</span><span class="p">:</span> <span class="mi">64</span><span class="p">,</span>
    <span class="sh">"</span><span class="s">input_size</span><span class="sh">"</span><span class="p">:</span> <span class="n">train_x</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span>
    <span class="sh">"</span><span class="s">output_size</span><span class="sh">"</span><span class="p">:</span> <span class="mi">2</span>
<span class="p">})</span>

<span class="c1"># 훈련 함수 수정
</span><span class="k">def</span> <span class="nf">train_model</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">train_loader</span><span class="p">,</span> <span class="n">val_loader</span><span class="p">,</span> <span class="n">criterion</span><span class="p">,</span> <span class="n">optimizer</span><span class="p">,</span> <span class="n">device</span><span class="p">,</span> <span class="n">epochs</span><span class="o">=</span><span class="mi">10</span><span class="p">):</span>
    <span class="n">model</span><span class="p">.</span><span class="nf">train</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">epoch</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">epochs</span><span class="p">):</span>
        <span class="n">running_loss</span> <span class="o">=</span> <span class="mf">0.0</span>
        <span class="n">correct_train</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="n">total_train</span> <span class="o">=</span> <span class="mi">0</span>

        <span class="c1"># Training loop
</span>        <span class="k">for</span> <span class="n">inputs</span><span class="p">,</span> <span class="n">labels</span> <span class="ow">in</span> <span class="n">train_loader</span><span class="p">:</span>
            <span class="n">inputs</span><span class="p">,</span> <span class="n">labels</span> <span class="o">=</span> <span class="n">inputs</span><span class="p">.</span><span class="nf">to</span><span class="p">(</span><span class="n">device</span><span class="p">),</span> <span class="n">labels</span><span class="p">.</span><span class="nf">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>

            <span class="n">optimizer</span><span class="p">.</span><span class="nf">zero_grad</span><span class="p">()</span>
            <span class="n">outputs</span> <span class="o">=</span> <span class="nf">model</span><span class="p">(</span><span class="n">inputs</span><span class="p">)</span>
            <span class="n">loss</span> <span class="o">=</span> <span class="nf">criterion</span><span class="p">(</span><span class="n">outputs</span><span class="p">,</span> <span class="n">labels</span><span class="p">)</span>
            <span class="n">loss</span><span class="p">.</span><span class="nf">backward</span><span class="p">()</span>
            <span class="n">optimizer</span><span class="p">.</span><span class="nf">step</span><span class="p">()</span>

            <span class="n">running_loss</span> <span class="o">+=</span> <span class="n">loss</span><span class="p">.</span><span class="nf">item</span><span class="p">()</span>

            <span class="c1"># Accuracy 계산
</span>            <span class="n">_</span><span class="p">,</span> <span class="n">predicted</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="nf">max</span><span class="p">(</span><span class="n">outputs</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
            <span class="n">correct_train</span> <span class="o">+=</span> <span class="p">(</span><span class="n">predicted</span> <span class="o">==</span> <span class="n">labels</span><span class="p">).</span><span class="nf">sum</span><span class="p">().</span><span class="nf">item</span><span class="p">()</span>
            <span class="n">total_train</span> <span class="o">+=</span> <span class="n">labels</span><span class="p">.</span><span class="nf">size</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>

        <span class="n">train_loss</span> <span class="o">=</span> <span class="n">running_loss</span> <span class="o">/</span> <span class="nf">len</span><span class="p">(</span><span class="n">train_loader</span><span class="p">)</span>
        <span class="n">train_accuracy</span> <span class="o">=</span> <span class="n">correct_train</span> <span class="o">/</span> <span class="n">total_train</span>

        <span class="c1"># Validation loop
</span>        <span class="n">val_loss</span> <span class="o">=</span> <span class="mf">0.0</span>
        <span class="n">correct_val</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="n">total_val</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="n">model</span><span class="p">.</span><span class="nf">eval</span><span class="p">()</span>
        <span class="k">with</span> <span class="n">torch</span><span class="p">.</span><span class="nf">no_grad</span><span class="p">():</span>
            <span class="k">for</span> <span class="n">inputs</span><span class="p">,</span> <span class="n">labels</span> <span class="ow">in</span> <span class="n">val_loader</span><span class="p">:</span>
                <span class="n">inputs</span><span class="p">,</span> <span class="n">labels</span> <span class="o">=</span> <span class="n">inputs</span><span class="p">.</span><span class="nf">to</span><span class="p">(</span><span class="n">device</span><span class="p">),</span> <span class="n">labels</span><span class="p">.</span><span class="nf">to</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>
                <span class="n">outputs</span> <span class="o">=</span> <span class="nf">model</span><span class="p">(</span><span class="n">inputs</span><span class="p">)</span>
                <span class="n">loss</span> <span class="o">=</span> <span class="nf">criterion</span><span class="p">(</span><span class="n">outputs</span><span class="p">,</span> <span class="n">labels</span><span class="p">)</span>
                <span class="n">val_loss</span> <span class="o">+=</span> <span class="n">loss</span><span class="p">.</span><span class="nf">item</span><span class="p">()</span>

                <span class="c1"># Accuracy 계산
</span>                <span class="n">_</span><span class="p">,</span> <span class="n">predicted</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="nf">max</span><span class="p">(</span><span class="n">outputs</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
                <span class="n">correct_val</span> <span class="o">+=</span> <span class="p">(</span><span class="n">predicted</span> <span class="o">==</span> <span class="n">labels</span><span class="p">).</span><span class="nf">sum</span><span class="p">().</span><span class="nf">item</span><span class="p">()</span>
                <span class="n">total_val</span> <span class="o">+=</span> <span class="n">labels</span><span class="p">.</span><span class="nf">size</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>

        <span class="n">val_loss</span> <span class="o">/=</span> <span class="nf">len</span><span class="p">(</span><span class="n">val_loader</span><span class="p">)</span>
        <span class="n">val_accuracy</span> <span class="o">=</span> <span class="n">correct_val</span> <span class="o">/</span> <span class="n">total_val</span>

        <span class="c1"># 에포크별 출력
</span>        <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Epoch [</span><span class="si">{</span><span class="n">epoch</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="s">/</span><span class="si">{</span><span class="n">epochs</span><span class="si">}</span><span class="s">], Training Loss: </span><span class="si">{</span><span class="n">train_loss</span><span class="si">:</span><span class="p">.</span><span class="mi">4</span><span class="n">f</span><span class="si">}</span><span class="s">, Validation Loss: </span><span class="si">{</span><span class="n">val_loss</span><span class="si">:</span><span class="p">.</span><span class="mi">4</span><span class="n">f</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
        <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Training Accuracy: </span><span class="si">{</span><span class="n">train_accuracy</span><span class="si">:</span><span class="p">.</span><span class="mi">4</span><span class="n">f</span><span class="si">}</span><span class="s">, Validation Accuracy: </span><span class="si">{</span><span class="n">val_accuracy</span><span class="si">:</span><span class="p">.</span><span class="mi">4</span><span class="n">f</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>

        <span class="c1"># Wandb 로그 기록
</span>        <span class="n">wandb</span><span class="p">.</span><span class="nf">log</span><span class="p">({</span>
            <span class="sh">"</span><span class="s">epoch</span><span class="sh">"</span><span class="p">:</span> <span class="n">epoch</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span>
            <span class="sh">"</span><span class="s">train_loss</span><span class="sh">"</span><span class="p">:</span> <span class="n">train_loss</span><span class="p">,</span>
            <span class="sh">"</span><span class="s">val_loss</span><span class="sh">"</span><span class="p">:</span> <span class="n">val_loss</span><span class="p">,</span>
            <span class="sh">"</span><span class="s">train_accuracy</span><span class="sh">"</span><span class="p">:</span> <span class="n">train_accuracy</span><span class="p">,</span>
            <span class="sh">"</span><span class="s">val_accuracy</span><span class="sh">"</span><span class="p">:</span> <span class="n">val_accuracy</span>
        <span class="p">})</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="deeplearning" /><summary type="html"><![CDATA[wandb를 사용하자 먼저 wandb에 회원 가입한 후에 pip install wandb를 해주고 wandb login 후에 홈페이지에 있는 api를 복사해서 넣어주면 된다. 터미널에 입력할 때 키가 보이지 않느데 잉때 너무 당황하지 말자]]></summary></entry><entry><title type="html">dataload</title><link href="http://localhost:4000/deeplearning/2024/11/20/dataload.html" rel="alternate" type="text/html" title="dataload" /><published>2024-11-20T00:00:00+09:00</published><updated>2024-11-20T00:00:00+09:00</updated><id>http://localhost:4000/deeplearning/2024/11/20/dataload</id><content type="html" xml:base="http://localhost:4000/deeplearning/2024/11/20/dataload.html"><![CDATA[<h1 id="이진-분류로-바꿔-보자">이진 분류로 바꿔 보자</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">label</span> <span class="o">=</span> <span class="n">filename</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="sh">'</span><span class="s">@</span><span class="sh">'</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
<span class="n">label</span> <span class="o">=</span> <span class="sh">'</span><span class="s">normal</span><span class="sh">'</span> <span class="k">if</span> <span class="n">label</span> <span class="o">==</span> <span class="sh">'</span><span class="s">normal</span><span class="sh">'</span> <span class="k">else</span> <span class="sh">'</span><span class="s">error</span><span class="sh">'</span>
</code></pre></div></div>
<p>@ 앞에 어쩌고저쩌고 에러 또는 normal이 있던걸 if문을 통해 노말 또는 에러로 바꾸고<br />
train.py 에서는  output 사이즈를 2로 바꾸고</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">precision</span> <span class="o">=</span> <span class="nf">precision_score</span><span class="p">(</span><span class="n">all_labels</span><span class="p">,</span> <span class="n">all_predictions</span><span class="p">,</span> <span class="n">average</span><span class="o">=</span><span class="sh">'</span><span class="s">binary</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">recall</span> <span class="o">=</span> <span class="nf">recall_score</span><span class="p">(</span><span class="n">all_labels</span><span class="p">,</span> <span class="n">all_predictions</span><span class="p">,</span> <span class="n">average</span><span class="o">=</span><span class="sh">'</span><span class="s">binary</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">f1</span> <span class="o">=</span> <span class="nf">f1_score</span><span class="p">(</span><span class="n">all_labels</span><span class="p">,</span> <span class="n">all_predictions</span><span class="p">,</span> <span class="n">average</span><span class="o">=</span><span class="sh">'</span><span class="s">binary</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div>
<p>average를 binary로 바꾸면 끝</p>]]></content><author><name></name></author><category term="deeplearning" /><summary type="html"><![CDATA[이진 분류로 바꿔 보자]]></summary></entry><entry><title type="html">correlation2</title><link href="http://localhost:4000/deeplearning/2024/11/20/correlation_2.html" rel="alternate" type="text/html" title="correlation2" /><published>2024-11-20T00:00:00+09:00</published><updated>2024-11-20T00:00:00+09:00</updated><id>http://localhost:4000/deeplearning/2024/11/20/correlation_2</id><content type="html" xml:base="http://localhost:4000/deeplearning/2024/11/20/correlation_2.html"><![CDATA[<h1 id="gpu로-상관관계분석">GPU로 상관관계분석</h1>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">torch</span>
<span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="n">seaborn</span> <span class="k">as</span> <span class="n">sns</span>
<span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">from</span> <span class="n">dataload</span> <span class="kn">import</span> <span class="n">load_data</span>
<span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>  <span class="c1"># 랜덤 샘플링에 사용
</span>
<span class="c1"># 데이터 로드
</span><span class="n">train_x</span><span class="p">,</span> <span class="n">train_y</span><span class="p">,</span> <span class="n">test_x</span><span class="p">,</span> <span class="n">test_y</span><span class="p">,</span> <span class="n">val_x</span><span class="p">,</span> <span class="n">val_y</span> <span class="o">=</span> <span class="nf">load_data</span><span class="p">(</span><span class="sh">'</span><span class="s">../data/train</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">../data/test</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">../data/val</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># 훈련 데이터를 DataFrame으로 변환
</span><span class="n">train_df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="n">val_x</span><span class="p">)</span>
<span class="n">train_df</span><span class="p">[</span><span class="sh">'</span><span class="s">label</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">val_y</span>  <span class="c1"># 레이블 추가
</span>
<span class="c1"># 랜덤으로 10개 샘플 선택
</span><span class="n">sampled_df</span> <span class="o">=</span> <span class="n">train_df</span><span class="p">.</span><span class="nf">sample</span><span class="p">(</span><span class="n">n</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>  <span class="c1"># random_state로 재현성 유지
</span>
<span class="c1"># 샘플 데이터를 GPU 텐서로 변환
</span><span class="n">sampled_tensor</span> <span class="o">=</span> <span class="n">torch</span><span class="p">.</span><span class="nf">tensor</span><span class="p">(</span><span class="n">sampled_df</span><span class="p">.</span><span class="n">values</span><span class="p">,</span> <span class="n">device</span><span class="o">=</span><span class="sh">'</span><span class="s">cuda</span><span class="sh">'</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="n">torch</span><span class="p">.</span><span class="n">float32</span><span class="p">)</span>

<span class="c1"># 각 열의 평균과 표준편차 계산
</span><span class="n">mean</span> <span class="o">=</span> <span class="n">sampled_tensor</span><span class="p">.</span><span class="nf">mean</span><span class="p">(</span><span class="n">dim</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">keepdim</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">std</span> <span class="o">=</span> <span class="n">sampled_tensor</span><span class="p">.</span><span class="nf">std</span><span class="p">(</span><span class="n">dim</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">keepdim</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c1"># 정규화 (Z-score)
</span><span class="n">normalized_data</span> <span class="o">=</span> <span class="p">(</span><span class="n">sampled_tensor</span> <span class="o">-</span> <span class="n">mean</span><span class="p">)</span> <span class="o">/</span> <span class="n">std</span>

<span class="c1"># 상관계수 계산
</span><span class="n">correlation_matrix</span> <span class="o">=</span> <span class="p">(</span><span class="n">normalized_data</span><span class="p">.</span><span class="n">T</span> <span class="o">@</span> <span class="n">normalized_data</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="n">normalized_data</span><span class="p">.</span><span class="nf">size</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>

<span class="c1"># CPU로 다시 변환 및 Pandas DataFrame으로 변환
</span><span class="n">correlation_matrix_cpu</span> <span class="o">=</span> <span class="n">correlation_matrix</span><span class="p">.</span><span class="nf">cpu</span><span class="p">().</span><span class="nf">numpy</span><span class="p">()</span>
<span class="n">correlation_df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">DataFrame</span><span class="p">(</span><span class="n">correlation_matrix_cpu</span><span class="p">,</span> <span class="n">columns</span><span class="o">=</span><span class="n">sampled_df</span><span class="p">.</span><span class="n">columns</span><span class="p">,</span> <span class="n">index</span><span class="o">=</span><span class="n">sampled_df</span><span class="p">.</span><span class="n">columns</span><span class="p">)</span>

<span class="c1"># 상관계수 히트맵 시각화
</span><span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="nf">heatmap</span><span class="p">(</span><span class="n">correlation_df</span><span class="p">,</span> <span class="n">annot</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">fmt</span><span class="o">=</span><span class="sh">"</span><span class="s">.2f</span><span class="sh">"</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="sh">"</span><span class="s">coolwarm</span><span class="sh">"</span><span class="p">,</span> <span class="n">cbar</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="sh">"</span><span class="s">Correlation Matrix of Randomly Sampled Features and Label (GPU Accelerated)</span><span class="sh">"</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">savefig</span><span class="p">(</span><span class="sh">"</span><span class="s">correlation_matrix_sampled_gpu_heatmap.png</span><span class="sh">"</span><span class="p">,</span> <span class="n">dpi</span><span class="o">=</span><span class="mi">300</span><span class="p">,</span> <span class="n">bbox_inches</span><span class="o">=</span><span class="sh">"</span><span class="s">tight</span><span class="sh">"</span><span class="p">)</span>

<span class="c1"># 레이블과 각 변수 간의 상관계수 추출
</span><span class="n">label_correlation</span> <span class="o">=</span> <span class="n">correlation_df</span><span class="p">[</span><span class="sh">'</span><span class="s">label</span><span class="sh">'</span><span class="p">].</span><span class="nf">sort_values</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Correlation of features with label (GPU Accelerated):</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">label_correlation</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="실패">실패</h2>
<p>자원을 엄청 잡아먹더니<br />
상관관계 분석이 안된다…</p>]]></content><author><name></name></author><category term="deeplearning" /><summary type="html"><![CDATA[GPU로 상관관계분석 ```python import torch import matplotlib.pyplot as plt import seaborn as sns import pandas as pd from dataload import load_data import numpy as np # 랜덤 샘플링에 사용]]></summary></entry><entry><title type="html">multy</title><link href="http://localhost:4000/computer_structure/2024/11/19/multy.html" rel="alternate" type="text/html" title="multy" /><published>2024-11-19T00:00:00+09:00</published><updated>2024-11-19T00:00:00+09:00</updated><id>http://localhost:4000/computer_structure/2024/11/19/multy</id><content type="html" xml:base="http://localhost:4000/computer_structure/2024/11/19/multy.html"><![CDATA[<h1 id="2진-부동소수점-곱셈-과정">2진 부동소수점 곱셈 과정</h1>
<ol>
  <li>가수들을 곱한다(<em>부호를 고려해야 함, 곱셈 결과 길이가 승수나 피승수의 두배가 됨</em>)</li>
  <li>지수들을 더한다(<em>바이어스가 있다면 지수들을 더하 합의 바이어스 값은 두 배가 되므로 그 합으로부터 바이어스 값을 한 번 빼야한다, 나눗셈이면 더해야 함</em>)</li>
  <li>결과값을 정규화한다.</li>
</ol>

<h3 id="문제-2진-부동소수점-곱셈01011--23--0100125을-수행하라">문제: 2진 부동소수점 곱셈(0.1011 * 2^3) * (0.1001*2^5)을 수행하라.</h3>

<h2 id="풀이">풀이</h2>
<p><img src="image-13.png" alt="alt text" /></p>]]></content><author><name></name></author><category term="computer_structure" /><summary type="html"><![CDATA[2진 부동소수점 곱셈 과정 가수들을 곱한다(부호를 고려해야 함, 곱셈 결과 길이가 승수나 피승수의 두배가 됨) 지수들을 더한다(바이어스가 있다면 지수들을 더하 합의 바이어스 값은 두 배가 되므로 그 합으로부터 바이어스 값을 한 번 빼야한다, 나눗셈이면 더해야 함) 결과값을 정규화한다.]]></summary></entry><entry><title type="html">iee754_3</title><link href="http://localhost:4000/computer_structure/2024/11/19/ieee754_3.html" rel="alternate" type="text/html" title="iee754_3" /><published>2024-11-19T00:00:00+09:00</published><updated>2024-11-19T00:00:00+09:00</updated><id>http://localhost:4000/computer_structure/2024/11/19/ieee754_3</id><content type="html" xml:base="http://localhost:4000/computer_structure/2024/11/19/ieee754_3.html"><![CDATA[<h1 id="quadruple-precision-128bit">quadruple-precision: 128bit</h1>

<p>4배수 정밀도 수의 형식
<img src="image-10.png" alt="alt text" /></p>

<p>이 형식에서 지수의 바이어스 값은 (2^14 -1)
지수의 범위는 -(2^14) ~ (2^14 -1)이 된다.
(<em>책에서는 -16382~168383 이라고 하는데 나는 이해가 잘 안간다, -16384 아닌가?</em>)</p>

<h3 id="지수-범위에-대한-설명">지수 범위에 대한 설명</h3>
<p>E= 255, 0 일 때는 따로 취급하기 때문에 E=1인 -16382가 최소값</p>

<p><img src="image-11.png" alt="alt text" /></p>]]></content><author><name></name></author><category term="computer_structure" /><summary type="html"><![CDATA[quadruple-precision: 128bit]]></summary></entry><entry><title type="html">iee754</title><link href="http://localhost:4000/computer_structure/2024/11/19/ieee754.html" rel="alternate" type="text/html" title="iee754" /><published>2024-11-19T00:00:00+09:00</published><updated>2024-11-19T00:00:00+09:00</updated><id>http://localhost:4000/computer_structure/2024/11/19/ieee754</id><content type="html" xml:base="http://localhost:4000/computer_structure/2024/11/19/ieee754.html"><![CDATA[<h1 id="ieee">ieee?</h1>
<p>ieee는 미국전기전자공학회
그래서 이 아이들이 뭘 했냐?
ieee 왈 ‘우리 부동 소수점 통일좀 해서 쓰자’ 라고 해서 이 통일된 부동소수점을 <em>IEEE754</em>라고 부르는 것</p>

<p>IEEE754 부동소수점 표준 형식에는</p>
<ol>
  <li>8-비트 길이의 지수를 가지는 32-비트 단일 -정밀도 형식과</li>
  <li>11-비트 길이의 지수를 가지는 64-비트 복수- 정밀도 형식이 있음
<img src="image.png" alt="alt text" /></li>
</ol>

<p>자 우리 Think를 해봅시다.
32-비트 에서 지수를 8비트 쓰면, 부호 1비트 까지 해서 32-9를 한 23비트가 가수로 쓰이겠죠?</p>

<p>그런데 우리가 이걸 정규화 형식으로 
N=(-1)^s<em>M</em>2^E을 이용해서 0.1bbb…<em>2^E 이런식으로 쓰고 소수점 바로 우측에 비트에 넣지 않았단 말이죠(</em>왜냐하면 넣지 않아도 거기 있는걸 아니깐 굳이 넣을 필요가 없음*)</p>

<p>IEEE표준에서도 첫번째 <code class="language-plaintext highlighter-rouge">1</code>은 포함시키지 않는다 이 말이죠</p>

<p>다만 여기서는 가수가 <strong>1.M<em>2^E**의 형태를 가진다는 점만 알아주면 됩니다.
(</em>소수점 좌측의 1을 무시하는거임, 이걸 우린 **숨겨진 비트</strong>라고 함*)</p>

<p>지수 필드는 <strong>바이어스된 2진수</strong>로 표현되며, 바이어스 값은 127입니다!!</p>

<p><img src="image-1.png" alt="alt text" /></p>

<h3 id="문제-10진수--13625를-ieee754-단일-정밀도-표준-형식으로-표현하라-단-바이어스-128">문제: 10진수 -13.625를 IEEE754 단일-정밀도 표준 형식으로 표현하라. (단, 바이어스 128)</h3>

<h2 id="풀이">풀이</h2>
<p><img src="image-6.png" alt="alt text" /></p>

<p><em>소수점 부분 이진수 구하는 방법</em></p>

<ol>
  <li>0.625<em>2=1.25 (</em>정수 부분 1. 소수부분 0.25가 남음*)</li>
  <li>0.25 * 2 =0.5 (<em>1번에서 남은 부분을 2로 곱함</em>)</li>
  <li>0.5 <em>2 =1 (</em>2번에서 남은 부분을 곱함*)</li>
</ol>

<p>문제를 다시 십진수로 바꾸면<br />
N=(-1)^1 * 2^130-127<br />
(<em>127을 바이어스로 더했으니 원래대로 되돌릴 때는 다시 빼줘야 함</em>)</p>

<p><img src="image-7.png" alt="alt text" />
을 이용해 정규화된 표현으로 표현된 2진수를 10진수로 변환할 수 있다.</p>]]></content><author><name></name></author><category term="computer_structure" /><summary type="html"><![CDATA[ieee? ieee는 미국전기전자공학회 그래서 이 아이들이 뭘 했냐? ieee 왈 ‘우리 부동 소수점 통일좀 해서 쓰자’ 라고 해서 이 통일된 부동소수점을 IEEE754라고 부르는 것]]></summary></entry><entry><title type="html">iee754_2</title><link href="http://localhost:4000/computer_structure/2024/11/19/ieee745_2.html" rel="alternate" type="text/html" title="iee754_2" /><published>2024-11-19T00:00:00+09:00</published><updated>2024-11-19T00:00:00+09:00</updated><id>http://localhost:4000/computer_structure/2024/11/19/ieee745_2</id><content type="html" xml:base="http://localhost:4000/computer_structure/2024/11/19/ieee745_2.html"><![CDATA[<h1 id="iee754">IEE754</h1>

<p>NaN 결과는 0으로 나누기, 음수에 대한 루트 계산 등과 같은 중요한 계산 오류들이 있다.</p>

<p>이 표준에서 정의하고 있는 NaN 형식은 M !=0이고 E=255(32-bit형식) 또는 E=2047(64-bit형식)</p>

<p>오버플로우가 발생한 경우에는 그 결과를 무한대로 취급하며, M=0 및 E=255(32-bit형식) 또는 E=2047(64-bit형식) 로 나타낸다.<br />
즉, 가수의 모든 필드에는 0, 지수 필드는 모두 1</p>

<p>언더플로우는 지수 필드의 모든 비트들을 0으로 세트, 가수는 0.M, 즉 소수점의 좌측 비트로서 0을 사용하여 수를 표현</p>

<p>32-비트 형식
<img src="image-8.png" alt="alt text" /></p>

<p>62-비트 형식
<img src="image-9.png" alt="alt text" /></p>]]></content><author><name></name></author><category term="computer_structure" /><summary type="html"><![CDATA[IEE754]]></summary></entry><entry><title type="html">biased.md</title><link href="http://localhost:4000/computer_structure/2024/11/19/biased.html" rel="alternate" type="text/html" title="biased.md" /><published>2024-11-19T00:00:00+09:00</published><updated>2024-11-19T00:00:00+09:00</updated><id>http://localhost:4000/computer_structure/2024/11/19/biased</id><content type="html" xml:base="http://localhost:4000/computer_structure/2024/11/19/biased.html"><![CDATA[<h1 id="바이어스">바이어스?</h1>

<p>우리가 정규화된 표현을 쓸 때 <strong>정수0</strong>에 대해서 문제가 발생함</p>

<p>컴퓨터는 <strong>zero-test</strong>를 수시로 해서 이게 0인지 아닌지 판별을 하는데, 이 컴퓨터가 0은 모든 비트들이 0이다라는걸 기본적으로 깔고 감<br />
<img src="image-3.png" alt="alt text" /><br />
이렇게 하면 아주 이상적</p>

<p>이제 지수가 음수 일때를 생각해보자.<br />
지수가 음수면 일단 지수에도 부호를 넣어줘야 함 -&gt; 비트 낭비하기 싫음 -&gt; 음수를 양수로 처리해서 쓰자 -&gt; 바이어스 등장!!<br />
(<em>그리고 지수가 한 없이 큰 음수이면 언더플로우나 정밀도 손실이 발생할 수 있다</em>)</p>

<p>ex) 바이어스가 127이면 지수 비트에 01111111을 더해주면 끝</p>

<p><img src="image-4.png" alt="alt text" /></p>

<p><img src="image-5.png" alt="alt text" /></p>

<p>M의 범위가 0.5보다 크거나 같고 1-2^-23보다 작거나 같아야 할것 같은데 왜 <strong>2^-24</strong>보다 작거나 같은지 이해가 안가네</p>

<h3 id="이유">이유</h3>
<p>히든 비트가 있으니깐 24비트로 표현 가능</p>]]></content><author><name></name></author><category term="computer_structure" /><summary type="html"><![CDATA[바이어스?]]></summary></entry><entry><title type="html">add</title><link href="http://localhost:4000/computer_structure/2024/11/19/add.html" rel="alternate" type="text/html" title="add" /><published>2024-11-19T00:00:00+09:00</published><updated>2024-11-19T00:00:00+09:00</updated><id>http://localhost:4000/computer_structure/2024/11/19/add</id><content type="html" xml:base="http://localhost:4000/computer_structure/2024/11/19/add.html"><![CDATA[<h1 id="덧샘과-뺄셈">덧샘과 뺄셈</h1>

<ol>
  <li>두 수의 소수점 위치를 일치시킨다.(<em>두 수들중에서 더 작은 수를 우측으로 시프트</em>)</li>
  <li>가수들 간에 더하기를 수행</li>
  <li>결과를 정규화 시킨다.</li>
</ol>

<h3 id="문제-부동소수점-수들-간의-덧셈0110100--23--011110025을-수행하라">문제: 부동소수점 수들 간의 덧셈(0.110100 * 2^3 + 0.111100*2^5)을 수행하라.</h3>

<h2 id="풀이">풀이</h2>
<p><img src="image-12.png" alt="alt text" /></p>

<p>뺄셈도 같은 방법으로 처리 가능(<em>감수를 2의 보수로 변환하여 더해야 한다</em>)</p>]]></content><author><name></name></author><category term="computer_structure" /><summary type="html"><![CDATA[덧샘과 뺄셈]]></summary></entry></feed>